{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAU,CACdC,SAAU,YACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,aACnBC,SAAS,EACTC,cAAc,GAOhB,SAASC,EAAcR,EAAUS,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEX,E,MAAUS,IAEpBG,EAAO,C,SAAEZ,E,MAAUS,GAAQ,GAE5BA,EAAM,G,CAbAQ,SAASC,cAAc,QAE/BC,iBAAiB,UAetB,SAAyBC,GACvBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACjC,SAAEA,EAAQS,MAAEA,MACjBZ,EAAAqC,OAAOC,QACL,uBAAqBnC,QAAiBS,MAAWV,EAC/C,IAGLqC,OAAM,EAACpC,SAAEA,EAAQS,MAAEA,MAClBZ,EAAAqC,OAAOG,QACL,sBAAoBrC,QAAiBS,MAAWV,EAC9C,IAGN4B,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst options = {\n  position: 'right-top',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 3000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n  useIcon: false,\n  pauseOnHover: true,\n};\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    \n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n      inputDelay += inputStep;\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","useIcon","pauseOnHover","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.3662e218.js.map"}