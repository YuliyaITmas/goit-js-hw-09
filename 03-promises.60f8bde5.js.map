{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAU,CACdC,SAAU,YACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,aACnBC,SAAS,EACTC,cAAc,GAOhB,SAASC,EAAcR,EAAUS,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEX,WAAUS,UAEpBG,EAAO,CAAEZ,WAAUS,S,GAEpBA,E,IAbMQ,SAASC,cAAc,QAE/BC,iBAAiB,UAetB,SAAyBC,GACvBA,EAAMC,iBAON,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCzB,EAAcyB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnC,EAAQmC,EAARnC,SAAUS,EAAK0B,EAAL1B,MACjBZ,EAAAuC,OAAOC,QACL,uBAAwCC,OAAftC,EAAS,QAAYsC,OAAN7B,EAAM,MAC5CV,E,IAGLwC,OAAM,SAAAJ,G,IAAGnC,EAAQmC,EAARnC,SAAUS,EAAK0B,EAAL1B,MAClBZ,EAAAuC,OAAOI,QACL,sBAAuCF,OAAftC,EAAS,QAAYsC,OAAN7B,EAAM,MAC3CV,E,IAGN6B,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst options = {\n  position: 'right-top',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 3000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n  useIcon: false,\n  pauseOnHover: true,\n};\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    \n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n      inputDelay += inputStep;\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","useIcon","pauseOnHover","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.60f8bde5.js.map"}